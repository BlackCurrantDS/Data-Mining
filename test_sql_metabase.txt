--checking total records

--select count(1) from appointment;

--select count(1) from clinic;

select clinic_id
, city 
, type as "clinic_type"
, count() as "total"

from appointment apt
-- filtering state
where lower(ltrim(rtrim(state)) in ("complete", "cancelled")
and 
left join clinic cl on cl.id = apt.clinic_id;

-- Bavaria and Berlin clinics

select *
from clincis
where ltrim(rtrim(lower(state))) in ("berlin", "bavaria");

-- july 2020 month appointments

select *
from appointment
where extract(month from date_created) = 07 and extract(year from date_created) = 2020; -- no data

select extract(month from date_created),extract(year from date_created) 
from appointment limit 10; -- just to see data

select distinct extract(month from date_created)
from appointment; -- only june data is available

select distinct extract(year from date_created)
from appointment; -- only june data is available

select distinct extract(month from date_scheduled)
from appointment; -- only june data is available

select distinct state from appointment; -- completed, cancelled, date_scheduled

select extract(month from date_scheduled),extract(year from date_created)
from appointment
where --extract(month from date_scheduled) = 7 and 
extract(year from date_created) = 2020
limit 10;
 

-- number of appointsments via state
select count(1), state
from appointment
group by state;


--Number of appointments completed or cancelled , cancellation rate

select clinic_id
, clinic.city
, clinic.type
,count(1) as total_appointments
,count(1) FILTER (WHERE appointment.state in('completed','cancelled')) AS completed_or_cancelled_number
--,COUNT(CASE WHEN appointment.state = 'completed' THEN 1  end) AS completed_number
--,COUNT(CASE WHEN appointment.state = 'cancelled' THEN 1  end) AS cancelled_number
--,count(1) FILTER (WHERE appointment.state = 'scheduled') AS scheduled_number
, count(1) FILTER (WHERE appointment.state = 'completed' and appointment.type = 'scan') AS completed_scans
, count(1) FILTER (WHERE appointment.state = 'cancelled' and appointment.type = 'scan') AS cancelled_scans
, count(1) FILTER (WHERE appointment.state = 'completed' and appointment.type = 'refinement') AS completed_refinement
, count(1) FILTER (WHERE appointment.state = 'cancelled' and appointment.type = 'refinement') AS cancelled_refinement
,(count(1) FILTER (WHERE appointment.state = 'cancelled')/count(1))*100 as cancellelation_rate
from appointment
left join clinic
on clinic.id = appointment.clinic_id
group by clinic_id, clinic.city, clinic.type
order by clinic_id 
;

--Number of scan/refinement appointments completed and cancelled

select count(1), state, type
from appointment
where lower(ltrim(rtrim(type))) in ('scan', 'refinement')
group by state, type
having lower(ltrim(rtrim(state))) in ('completed', 'cancelled')
 ;

--Number of completed appointments per member of staff


select  clinic_id, count(1) as total_appointsments , count(1)/staff_headcount as per_head_count
from appointment
left join clinic
on clinic.id = appointment.clinic_id
where lower(ltrim(rtrim(appointment.state))) = 'completed'
group by clinic_id,staff_headcount


--Percent of total appointments that were cancelled

--Percent of completed scans over monthly capacity

--capacity_rate


select  clinic_id, count(1) as completed_scans, coalesce(ROUND(COUNT(1) / 600,4),0) AS capacity_rate
from appointment
left join clinic
on clinic.id = appointment.clinic_id
where lower(ltrim(rtrim(appointment.state))) = 'completed'
and lower(ltrim(rtrim(appointment.type))) = 'scan'
group by clinic_id

--Rank of clinic cancellation_rate per clinic type, sorted ascending

--Rank of capacity_rate per clinic type, sorted descending

--capacity_rate


select  clinic_id, count(1) as completed_scans, coalesce(ROUND(COUNT(1) / 600,4),0) AS capacity_rate
from appointment
left join clinic
on clinic.id = appointment.clinic_id
where lower(ltrim(rtrim(appointment.state))) = 'completed'
and lower(ltrim(rtrim(appointment.type))) = 'scan'
group by clinic_id;

WITH capacity_rate AS (
   SELECT 
       clinic_id, clinic.type as clinic_type ,count(1) as completed_scans, coalesce(ROUND(COUNT(1) / 600,4),0) AS capacity_rate
from appointment
left join clinic
on clinic.id = appointment.clinic_id
where lower(ltrim(rtrim(appointment.state))) = 'completed'
and lower(ltrim(rtrim(appointment.type))) = 'scan'
group by clinic_id,clinic_type)

 SELECT clinic_id, clinic_type, completed_scans,  capacity_rate,
     RANK() OVER (PARTITION BY clinic_type ORDER BY capacity_rate desc) AS caapacity_rank
 FROM 
     capacity_rate ORDER BY clinic_id;
	 



-- per head count
select clinic.id, count(1) as completed_appointments , clinic.staff_headcount, count(1)/clinic.staff_headcount as per_head_count
from clinic 
left join appointment
on clinic.id = appointment.clinic_id
where lower(ltrim(rtrim(appointment.state))) = 'completed'
group by clinic.id,staff_headcount;

-- cancellation rate
select clinic.id, count(1) as total_appointments
,count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'cancelled') as cancelled
, cast((cast(count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'cancelled') as DECIMAL)/cast(count(1) as DECIMAL))*100 AS DECIMAL(10,4)) as c_rate
from clinic 
left join appointment
on clinic.id = appointment.clinic_id
group by clinic.id
order by clinic.id;

-- capacity rate
select clinic.id
,count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'completed' and lower(ltrim(rtrim(appointment.type))) = 'scan') as completed_scans
, cast((cast(count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'completed' and lower(ltrim(rtrim(appointment.type))) = 'scan') as DECIMAL)/600)*100 AS DECIMAL(10,4)) as c_rate
from clinic 
left join appointment
on clinic.id = appointment.clinic_id
group by clinic.id
order by clinic.id;


with vars as (
  select 30 as number_of_days,
         20 as per_day_capacity
)

, states_and_rates as(

select clinic_id
, clinic.state
, clinic.city as city
, clinic.type as clinic_type

-- adding month and year to be able to analyse for other months as well , can uncomment
--, extract(month from date_scheduled) as month_
--, extract(year from date_scheduled) as year_

--,count(1) as total_appointments #added to see total number of appointments

-- number of appointments based on various states and type
, count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'completed' or lower(ltrim(rtrim(appointment.state))) = 'cancelled') AS completed_or_cancelled_number
, count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'completed' and lower(ltrim(rtrim(appointment.type))) = 'scan') AS completed_scans
, count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'cancelled' and lower(ltrim(rtrim(appointment.type))) = 'scan') AS cancelled_scans
, count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'completed' and lower(ltrim(rtrim(appointment.type))) = 'refinement') AS completed_refinement
, count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'cancelled' and lower(ltrim(rtrim(appointment.type))) = 'refinement') AS cancelled_refinement

--Percent of total appointments that were cancelled, total cancelled/total appointments 
, cast((cast(count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'cancelled') as DECIMAL)/cast(count(1) as DECIMAL))*100 AS DECIMAL(10,4)) as cancellelation_rate

--Percent of completed scans over monthly capacity, total completed scans/ per month capacity of a clinic, given, 30 days a month, and 20 appointments per day capacity
, cast((cast(count(1) FILTER (WHERE lower(ltrim(rtrim(appointment.state))) = 'completed' and lower(ltrim(rtrim(appointment.type))) = 'scan') as DECIMAL)/((SELECT number_of_days FROM vars) * (SELECT per_day_capacity FROM vars)))*100 AS DECIMAL(10,4)) as capacity_rate


from clinic -- to get all the clicnic data for those there might be no appointments yet
left join appointment
on clinic.id = appointment.clinic_id 
group by clinic_id,clinic.state, clinic.city, clinic.type, extract(month from date_scheduled), extract(year from date_scheduled)
-- filter conditions on state of bavaria and berlin and mont/year july , 2020
having extract(month from date_scheduled)= 7  and extract(year from date_scheduled) = 2020 and upper(ltrim(rtrim(clinic.state))) in ('BL', 'BY')
order by clinic_id 
)

--Number of completed appointments per member of staff
, per_head_count as
(
select clinic.id as clinic_id

--Number of completed appointments per member of staff, total completed appointment in a clinic/number of people in that clinic
,count(1)/clinic.staff_headcount as per_head_count

from clinic 
left join appointment
on clinic.id = appointment.clinic_id

-- already filtering completed 
where lower(ltrim(rtrim(appointment.state))) = 'completed' 

group by clinic.id,clinic.state,staff_headcount,extract(month from date_scheduled),extract(year from date_scheduled)

having extract(month from date_scheduled)= 7 and extract(year from date_scheduled) = 2020 and upper(ltrim(rtrim(clinic.state))) in ('BL', 'BY')
)


select 

states_and_rates.clinic_id
, city
, clinic_type
--, month_
--, year_
, completed_or_cancelled_number as total
, completed_scans
,cancelled_scans
,completed_refinement
,cancelled_refinement
,per_head_count.per_head_count as appointments_per_staff
,cancellelation_rate
,capacity_rate

-- ranking clinich in ascneidng based on their cancellation rates
,dense_rank() OVER (PARTITION BY clinic_type ORDER BY cancellelation_rate asc) AS cancellelation_rank

-- ranking clinich in ascneidng based on their capacity rates
,dense_rank() OVER (PARTITION BY clinic_type ORDER BY capacity_rate desc) AS capacity_rank 

 FROM 
     states_and_rates 
left join per_head_count
on states_and_rates.clinic_id = per_head_count.clinic_id
ORDER BY clinic_id;
